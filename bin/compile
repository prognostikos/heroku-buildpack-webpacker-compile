#!/bin/bash

set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# CACHE_DAYS=34
CACHED_PACKS="$CACHE_DIR/cached_packs"
BUILT_PACKS="$BUILD_DIR/public/packs"

echo "-----> Ensuring packs are compiled"

for env_var in RAILS_ENV ASSET_HOST HOST SECRET_KEY_BASE; do
  if [ -f "$ENV_DIR/$env_var" ]; then
    export "$env_var=$(cat "$ENV_DIR/$env_var")"
  fi
done

cd "$BUILD_DIR"
bundle exec rails webpacker:compile

mkdir -p "$CACHED_PACKS"

for pack_dir in css js media static; do
  # clean up deeply nested folders in cache
  if [ -d "$CACHED_PACKS/$pack_dir/$pack_dir" ]; then
    find "$CACHED_PACKS/$pack_dir/$pack_dir" -type f -print0 | xargs -r0 mv -nt "$CACHED_PACKS/$pack_dir/"
    rm -r "${CACHED_PACKS:?}/$pack_dir/$pack_dir"
  fi

  # copy compiled output to the cache that persists between builds
  if [ -d "$BUILT_PACKS/$pack_dir" ]; then
    echo "Copying contents of $BUILT_PACKS/$pack_dir to $CACHED_PACKS/$pack_dir"
    rsync -av "$BUILT_PACKS/$pack_dir/" "$CACHED_PACKS/$pack_dir/"
  fi

  # ensure everything from the cache + the latest build is available in the slug
  if [ -d "$CACHED_PACKS/$pack_dir" ]; then
    echo "Copying contents of $CACHED_PACKS/$pack_dir" to "$BUILT_PACKS/$pack_dir"
    rsync -av  "$CACHED_PACKS/$pack_dir" "$BUILT_PACKS/$pack_dir"
  fi
done

# echo "-----> Cleaning cached packs"

# for dir in $CACHED_PACKS $BUILT_PACKS; do
#   find "$dir" -mtime "+$CACHE_DAYS" -print0 | xargs -0 rm
# done

